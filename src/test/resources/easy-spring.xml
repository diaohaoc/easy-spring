<?xml version="1.0" encoding="UTF-8"?>
<beans>

<!--    <bean id="userDao" class="test.bean.UserDao" init-method="initMethod" destroy-method="destroyMethod"/>-->



    <bean id="userService" class="test.bean.UserService"/>
<!--        <property name="anotherService" ref="anotherService"/>-->
<!--    </bean>-->
<!--    <bean id="anotherService" class="test.bean.AnotherService"/>-->
<!--        <property name="userService" ref="userService"/>-->
<!--    </bean>-->

    <bean class="fun.easyspring.aop.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

    <bean id="beforeAdvice" class="test.bean.UserServiceBeforeAdvice"/>
    <bean id="afterAdvice" class="test.bean.UserServiceAfterAdvice"/>

    <bean id="methodInterceptorBefore" class="fun.easyspring.aop.aop.framework.adapt.MethodBeforeAdviceInterceptor">
        <property name="advice" ref="beforeAdvice"/>
    </bean>

    <bean id="methodInterceptorAfter" class="fun.easyspring.aop.aop.framework.adapt.AfterReturningAdviceInterceptor">
        <property name="advice" ref="afterAdvice"/>
    </bean>

    <bean id="pointcutBefore" class="fun.easyspring.aop.aop.aspectj.AspectJExpressionPointcutAdvisor">
        <property name="expression" value="execution(* test.bean.IUserService.*(..))"/>
        <property name="advice" ref="methodInterceptorBefore"/>
    </bean>

    <bean id="pointcutAfter" class="fun.easyspring.aop.aop.aspectj.AspectJExpressionPointcutAdvisor">
        <property name="expression" value="execution(* test.bean.IUserService.*(..))"/>
        <property name="advice" ref="methodInterceptorAfter"/>
    </bean>


    <!--    <bean class="test.postprocessor.TestBeanFactoryPostProcessor"/>-->
<!--    <bean class="test.postprocessor.TestBeanPostProcessor"/>-->

</beans>